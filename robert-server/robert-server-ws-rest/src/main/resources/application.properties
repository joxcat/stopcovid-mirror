controller.path.prefix=/api

controller.internal.path.prefix=/internal/api

push.api.path=/push-token

push.api.path.token=/{token}

push.api.version=${PUSH_API_VERSION:/v1}

debug=${ROBERT_SERVER_DEBUG_ERRORS:false}

#spring.data.mongodb.authentication-database= # Authentication database name.
# Database name.
#spring.data.mongodb.database=${ROBERT_SERVER_DB_NAME:protectedRobertDB}
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.host=${ROBERT_SERVER_DB_HOST:localhost}
# Mongo server host.
#spring.data.mongodb.password= # Login password of the mongo server.
# Mongo server port.
#spring.data.mongodb.port=${ROBERT_SERVER_DB_PORT:27017}
## Enable Mongo repositories.

server.port=${ROBERT_SERVER_PORT:8086}
## Use uri to be able to connect to replica sets / sharded clusters
## Giving a value to $ROBERT_SERVER_DB_URI will bypass ROBERT_SERVER_DB_HOST, ROBERT_SERVER_DB_PORT and ROBERT_SERVER_DB_NAME

# The hostname of the crypto server
robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}

# The port of the crypto server
robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}

# Submission code server
submission.code.server.host=${SUBMISSION_CODE_SERVER_HOST:localhost}
submission.code.server.port=${SUBMISSION_CODE_SERVER_PORT:8087}
submission.code.server.verify.path=/api/v1/verify

captcha.secret=${CAPTCHA_SECRET}
captcha.hostname=${CAPTCHA_HOSTNAME:stopcovid.gouv.fr}
captcha.verify.url=${VERIFY_URL:https://www.google.com/recaptcha/api/siteverify}

# Internal captcha service
captcha.internal.gateway.enabled=${CAPTCHA_INTERNAL_GATEWAY_ENABLED:false}
captcha.internal.hostname=${CAPTCHA_INTERNAL_HOSTNAME:http://localhost:8055}
captcha.internal.verify.url=${CAPTCHA_INTERNAL_VERIFY_URL:http://localhost:8055/private/api/v1/captcha/{captchaId}/checkAnswer}
captcha.internal.success.code=${CAPTCHA_INTERNAL_SUCCESS_CODE:SUCCESS}

# Define the duration limit between Request
robert.esr.limit=${ESR_LIMIT:1}

# Available endpoints for the monitoring
management.endpoints.web.exposure.include=${ROBERT_SERVER_MONITORING_ENDPOINTS:health,metrics}

robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x33}
robert.server.request-time-delta-tolerance=${ROBERT_SERVER_REQUEST_TIME_DELTA_TOLERANCE:60}
robert.server.captcha-challenge-timestamp-tolerance=${ROBERT_SERVER_CAPTCHA_CHALLENGE_TIMESTAMP_TOLERANCE:15}
robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}

push.server.host=${PUSH_SERVER_HOST:localhost}
push.server.port=${PUSH_SERVER_PORT:9096}

# Push server Timeout
push.server.connection.timeout-millis=${PUSH_SERVER_CONNECTION_TIMEOUT_MILLIS:10000}
push.server.global.timeout=${PUSH_SERVER_READ_TIMEOUT:10}
