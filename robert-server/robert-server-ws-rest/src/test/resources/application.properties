controller.path.prefix=/api

controller.internal.path.prefix=/internal/api

push.api.path=/push-token

push.api.path.token=/{token}

push.api.version=/v1


#spring.data.mongodb.authentication-database= # Authentication database name.
# Database name.
#spring.data.mongodb.database=test
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.host=localhost
# Mongo server host.
#spring.data.mongodb.password= # Login password of the mongo server.
# Mongo server port.
#spring.data.mongodb.port=27717
## Enable Mongo repositories.
# Mongo database URI. When set, host and port are ignored.
#spring.data.mongodb.uri=mongodb://localhost/local

# The hostname of the crypto server
robert.crypto.server.host=localhost

# The port of the crypto server
robert.crypto.server.port=9090

# Submission code server
submission.code.server.host=localhost
submission.code.server.port=8087
submission.code.server.verify.path=/api/v1/verify

captcha.secret=captcha
captcha.hostname=stopcovid.gouv.fr
captcha.verify.url=https://www.google.com/recaptcha/api/siteverify

# New captcha service
captcha.internal.gateway.enabled=${CAPTCHA_INTERNAL_GATEWAY_ENABLED:true}
captcha.internal.hostname=${CAPTCHA_INTERNAL_HOSTNAME:http://localhost:8055}
captcha.internal.verify.url=${CAPTCHA_INTERNAL_VERIFY_URL:http://localhost:8055/private/api/v1/captcha/{captchaId}/checkAnswer}
captcha.internal.success.code=${CAPTCHA_INTERNAL_SUCCESS_CODE:SUCCESS}

# Define the durantion limit between Request
robert.esr.limit=1

robert.server.country-code=0x21
robert.server.request-time-delta-tolerance=60
robert.server.status-request-minimum-epoch-gap=2
robert.server.captcha-challenge-timestamp-tolerance=15
robert.server.time-start=20200601


push.server.host=localhost
push.server.port=8090
